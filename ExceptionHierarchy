Exception Hierarchy in Java:	
  
                                          Object
				                                    |
			                                  THROWABLE
--------------------------------------------|------------------------------------------
|									                                                                    |
Exceptions							                                      	                   Errors (Unchecked under Exception hierarchy)
    |									                                                                |
    |--------- Checked Exceptions, Examples 					               |-------- Virtual Machine Error
    |           like Compile Time exception,					               |	
	  |          IOException, date parser exception etc.	             |
    |                                                                |
    |	                                                               |
    |--------- UnChecked Exceptions,Examples				                 |------- Assertion Error etc.
               Like null pointer exception or 
               any run time exception




Checked vs Unchecked Exceptions in Java
In Java, there are two types of exceptions:

1) Checked: are the exceptions that are checked at compile time. If some code within a method throws a checked exception, then 
the method must either handle the exception or it must specify the exception using throws keyword.

For example, consider the following Java program that opens file at location “C:\test\a.txt” and prints the first three lines of it.
The program doesn’t compile, because the function main() uses FileReader() and FileReader() throws a checked exception 
FileNotFoundException. It also uses readLine() and close() methods, and these methods also throw checked exception IOException
To fix the above program, we either need to specify list of exceptions using throws, or we need to use try-catch block. We have used 
throws in the below program. Since FileNotFoundException is a subclass of IOException, we can just specify IOException in the throws list
and make the program compiler-error-free.

2) Unchecked are the exceptions that are not checked at compiled time. In C++, all exceptions are unchecked, so it is not forced by 
the compiler to either handle or specify the exception. It is up to the programmers to be civilized, and specify or catch the exceptions.

In Java, exceptions under Error and RuntimeException classes are unchecked exceptions, everything else under throwable is checked.

AssertionError:
All Java errors implement the java.lang.Throwable interface, or are extended from another inherited class therein. 
The full exception hierarchy of this error is:

java.lang.Object
java.lang.Throwable
java.lang.Error
java.lang.AssertionError
