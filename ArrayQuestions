
################ Prints the first repeating element in array #########################
class Main 
{ 
    // This function prints the first repeating element in arr[] 
    static void printFirstRepeating(int arr[]) 
    { 
        // Initialize index of first repeating element 
        int min = -1; 
  
        // Creates an empty hashset 
        HashSet<Integer> set = new HashSet<>(); 
  
        // Traverse the input array from right to left 
        for (int i=arr.length-1; i>=0; i--) 
        { 
            // If element is already in hash set, update min 
            if (set.contains(arr[i])) 
                min = i; 
  
            else   // Else add element to hash set 
                set.add(arr[i]); 
        } 
  
        // Print the result 
        if (min != -1) 
          System.out.println("The first repeating element is " + arr[min]); 
        else
          System.out.println("There are no repeating elements"); 
    } 
  
    // Driver method to test above method 
    public static void main (String[] args) throws java.lang.Exception 
    { 
        int arr[] = {10, 5, 3, 4, 3, 5, 6}; 
        printFirstRepeating(arr); 
    } 
} 
###############################################################################################################

################################ Java program to find duplicates in the given array ################################
import java.util.HashMap; 
import java.util.Map; 
import java.util.Map.Entry; 

public class FindDuplicatedInArray 
{ 
	// Driver program 
	public static void main(String[] args) 
	{ 
		int arr[] = {12, 11, 40, 12, 5, 6, 5, 12, 11}; 
		int n = arr.length; 
		printDuplicates(arr, n); 
	} 
	// function to find and print duplicates 
	private static void printDuplicates(int[] arr, int n) 
	{ 
		Map<Integer,Integer> map = new HashMap<>(); 
		int count = 0; 
		boolean dup = false; 
		for(int i = 0; i < n; i++){ 
			if(map.containsKey(arr[i])){ 
				count = map.get(arr[i]); 
				map.put(arr[i], count + 1); 
			} 
			else{ 
				map.put(arr[i], 1); 
			} 
		} 
		
		for(Entry<Integer,Integer> entry : map.entrySet()) 
		{ 
			// if frequency is more than 1 
			// print the element 
			if(entry.getValue() > 1){ 
				System.out.print(entry.getKey()+ " "); 
				dup = true; 
			} 
		} 
		// no duplicates present 
		if(!dup){ 
			System.out.println("-1"); 
		} 
	} 
} 
###############################################################################################################

################ Find a numeic/number value in a String array ##################################
public static void main(String[] args){
String[] arr = {"123","abc","234"};
for(int i=0;i<arr.length;i++) {
	//System.out.println("Hello "+arr[i]);
	if(arr[i].matches("\\d+")) {
		System.out.println(arr[i]);
		
	}
}
#################################################################################################################
